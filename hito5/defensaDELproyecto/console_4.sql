CREATE DATABASE FARMACIASFENIX;

USE FARMACIASFENIX;

CREATE TABLE FARMACIA
(
    ID_FAR INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_FAR VARCHAR(30) NOT NULL,
    NIT INT NOT NULL,
    DIRECCION VARCHAR(150) NOT NULL,
    TELEFONO INT NOT NULL
);

CREATE TABLE PERSONAL
(
    ID_PER INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CI VARCHAR(30) NOT NULL,
    NOM_EMPL VARCHAR(50) NOT NULL,
    APE_EMPL VARCHAR(50) NOT NULL,
    EDAD INT NOT NULL,
    SEXO VARCHAR(15) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    TELEFONO INT NOT NULL,
    CARGO VARCHAR(100) NOT NULL,
    TIPO_USUARIO VARCHAR(20) NOT NULL,
    USUARIO VARCHAR(20) NOT NULL,
    CONTRASENA varchar(20) NOT NULL,
    ID_FAR INT NOT NULL,
    FOREIGN KEY (ID_FAR) REFERENCES FARMACIA(ID_FAR)
);

CREATE TABLE PROVEEDOR
(
    ID_PROV INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CI VARCHAR(20) NOT NULL,
    NOM_PROV VARCHAR(50) NOT NULL,
    APE_PROV VARCHAR(50) NOT NULL,
    LABORATORIO VARCHAR(50) NOT NULL,
    DIRECCION VARCHAR(150) NOT NULL,
    EDAD INT NOT NULL,
    SEXO VARCHAR(15) NOT NULL,
    TELEFONO INT NOT NULL,
    ID_FAR INT NOT NULL,
    FOREIGN KEY (ID_FAR) REFERENCES FARMACIA(ID_FAR)
);

CREATE TABLE CLIENTE
(
    ID_CLI INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOM_CLI VARCHAR(50) NOT NULL,
    APE_CLI VARCHAR(50) NOT NULL,
    NIT_O_CI INT NOT NULL,-- NIT O CI
    ID_PER INT NOT NULL,
    ID_FAR INT NOT NULL,
    FOREIGN KEY (ID_PER) REFERENCES PERSONAL(ID_PER),
    FOREIGN KEY (ID_FAR) REFERENCES FARMACIA(ID_FAR)
);

CREATE TABLE ESTANTERIA
(
    ID_ESTANTERIA INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    ESTANTERIA CHAR (2) NOT NULL
);

CREATE TABLE MEDICAMENTOS_VENTA
(
    ID_MEDICAMENTO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_COMERCIAL VARCHAR(100) NOT NULL,
    NOMBRE_GENERICO VARCHAR (100) NOT NULL,
    FORMA_FARMACEUTICA VARCHAR(100) NOT NULL, -- INYECTABLE, CREMA, COMPRIMIDO, EMULSION ORAL
    CONCENTRACION_FARMACEUTICA VARCHAR(20) NOT NULL, -- 300MG, 250MG, 10ML
    CANTIDAD INT NOT NULL, -- Cantidad disponible a la venta
    PRECIO_VENTA FLOAT NOT NULL,
    LABORATORIO VARCHAR(50) NOT NULL, -- Marca
    ID_ESTANTERIA INT NOT NULL,
    FOREIGN KEY (ID_ESTANTERIA) REFERENCES ESTANTERIA(ID_ESTANTERIA)
);

CREATE TABLE INVENTARIO
(
    ID_INVENTARIO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_MEDICAMENTO INT NOT NULL,
    NOMBRE_COMERCIAL VARCHAR(100) NOT NULL,
    NOMBRE_GENERICO VARCHAR (100) NOT NULL,
    FORMA_FARMACEUTICA VARCHAR(50) NOT NULL, -- INYECTABLE, CREMA, COMPRIMIDO, EMULSION ORAL
    CONCENTRACION_FARMACEUTICA VARCHAR(20) NOT NULL, -- 300MG, 250MG, 10ML
    PRESENTACION_ENVASE VARCHAR (100) NOT NULL, -- GEL,TABLETA, DULCE,
    UNIDAD_MEDIDA VARCHAR (10) NOT NULL, -- CAJA, PIEZA
    CANTIDAD INT NOT NULL, -- CUANTO HAY DISPONIBLES PARA VENDER
    PRECIO_VENTA FLOAT NOT NULL,
    PRECIO_COMPRA_CONTADO FLOAT NOT NULL,
    PRECIO_COMPRA_CREDITO FLOAT NOT NULL,
    LABORATORIO VARCHAR(50) NOT NULL, -- MARCA
    FOREIGN KEY(ID_MEDICAMENTO) REFERENCES MEDICAMENTOS_VENTA(ID_MEDICAMENTO)
);

CREATE TABLE REGISTRO_EMPLEADO
(
    ID_REGISTRO_EMPLEADO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_PER INT NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(50) NOT NULL,
    HORARIO_ENTRADA DATETIME NOT NULL,
    HORARIO_SALIDA datetime NOT NULL,
    CARGO VARCHAR(100) NOT NULL,
    UBICACION_EMPLEADO VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_PER) REFERENCES PERSONAL(ID_PER)
);

CREATE TABLE FACTURA
(
    ID_FACTURA INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    FECHA DATETIME NOT NULL,
    NOMRE_COMPRADOR VARCHAR(100) NOT NULL,
    NIT_CI INT NOT NULL,
    ID_MEDICAMENTO INT NOT NULL,
    NOMBRE_MEDICAMENTO VARCHAR(100) NOT NULL,
    CANTIDAD INT NOT NULL,
    PRECIO_UNITARIO FLOAT NOT NULL,
    IMPORTE FLOAT NOT NULL,
    TOTAL_FINAL FLOAT NOT NULL,
    EFECTIVO FLOAT NOT NULL,
    CAMBIO FLOAT NOT NULL,
    IMPORTE_LITERAL VARCHAR (200) NOT NULL,
    ID_PER INT NOT NULL,
    NOMBRE_CAJERO VARCHAR(100) NOT NULL,
    FOREIGN KEY (ID_PER) REFERENCES PERSONAL(ID_PER),
    FOREIGN KEY (ID_MEDICAMENTO) REFERENCES MEDICAMENTOS_VENTA(ID_MEDICAMENTO)
);

CREATE TABLE VENTAS
(
    ID_VENTA INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_FACTURA INT NOT NULL,
    ID_MEDICAMENTO INT NOT NULL,
    ID_PER INT NOT NULL,
    CANTIDAD INT NOT NULL,
    FOREIGN KEY (ID_MEDICAMENTO) REFERENCES MEDICAMENTOS_VENTA(ID_MEDICAMENTO),
    FOREIGN KEY (ID_PER) REFERENCES PERSONAL(ID_PER),
    FOREIGN KEY (ID_FACTURA) REFERENCES FACTURA(ID_FACTURA)
);

-- REGISTRO PARA FARMACIA
INSERT INTO FARMACIA(NOMBRE_FAR, NIT, DIRECCION, TELEFONO) VALUES
('FENIX', 231493016, 'CALLE AV. SANTA CRUZ #1451', 91652473);

-- REGISTRO PERSONAL
INSERT INTO PERSONAL(CI, NOM_EMPL, APE_EMPL, EDAD, SEXO, DIRECCION, TELEFONO, CARGO, TIPO_USUARIO, USUARIO, CONTRASENA, ID_FAR) values
('70650002LP','DERECK DANNER HECTOR','FERNANDEZ MENDOZA',18,'MASCULINO','16 DE JULIO',76536061,'CAJERO - CONTROL DE INVENTARIO','USUARIO','DERECK','1234DDLC', 1);

-- REGISTRO PROVEDOR
INSERT INTO PROVEEDOR(CI, NOM_PROV, APE_PROV, LABORATORIO, DIRECCION, EDAD, SEXO, TELEFONO, ID_FAR) VALUES
('6978923LP', 'CAROL', 'KIEFFER', 'VITA', 'AV. HECTOR ORMACHEA 320', 34, 'FEMENINO', 78963212, 1),
('8789302SCT', 'MILTON', 'GOMEZ', 'ANBEED_SRL', 'SANTA CRUZ DE LA SIERRA', 28, 'MASCULINO', 34352313,1),
('9827434LP', 'CARLOS', 'PEREZ', 'IFARBO LTDA', 'MIRAFLORES #1959', 30, 'MASCULINO', 2217600,1);

-- REGISTRO CLIENTE
INSERT INTO CLIENTE(NOM_CLI, APE_CLI, NIT_O_CI, ID_PER, ID_FAR) VALUES
('SERGIO','RAMOS',1239092,1, 1),
('NANCY', 'NINA', 1234522,1,1 ),
('NORA','ESPINOZA', 878340,1,1),
('FREDDY', 'MAMANI', 9861848, 1,1),
('NAYELI', 'LOPEZ', 453282,1,1),
('CARLOS', 'ARROYO', 987628,1,1);


-- REGISTRO ESTANTERIA
INSERT INTO ESTANTERIA(ESTANTERIA) VALUES
('1A'),
('2C'),
('3E'),
('4A'),
('5B'),
('1B'),
('2B'),
('3C'),
('5A'),
('4C'),
('6A');

-- REGISTRO MEDICAMENTOS VENTA
insert into MEDICAMENTOS_VENTA(NOMBRE_COMERCIAL,NOMBRE_GENERICO,FORMA_FARMACEUTICA,CONCENTRACION_FARMACEUTICA,CANTIDAD,PRECIO_VENTA,LABORATORIO, ID_ESTANTERIA)values
('ACTRON','IBUPROFENO','COMPRIMIDO','400 MG',5 , 1.5 ,'IFARBO LTDA',1),
('OMEPRAZOL','OMEPRAZOL','INYECTABLE','40 MG',3, 25.5,'GLAND PHARMA LIMITED', 2),
('ACETAMINOFEN','PARACETAMOL Y ACETAMINOFEN','COMPRIMIDO','500 MG',5,0.80,'LABORATORIOS IFA S.A.',3),
('LERTUS','DICLOFENACO','COMPRIMIDO','75 MG',15, 0.5, 'GLAND PHARMA LIMITED', 4),
('QUETOROL@ 20','KETOROLACO','COMPRIMIDO','20 MG', 1,3,'Delta S.A.', 5),
('PANTERA','PRESERVATIVO','LATEX','', 8, 6,'LABORATORIOS I.S.O',6),
('AZITROMICINA','AZITROMICINA','TABLETA_ORAL','500Mg',100,7,'ANBEED SRL', 7),
('LOZARTAN_POTASICO','LOZARTAN_POTASICO','TABLETAS_ORAL','50Mg',150,30,'ANBEED SRL', 8),
('PROPOFOL','PROPOFOL','INYECTABLE','1%_2ml',5,50,'ANBEED_SRL', 9),
('CEFOTAXIMA','CEFOTAXIMA','POLVO_INYECTABLE','1G',4,10,'ANBEED SRL',10),
('IBUPROFENO','IBUPROFENO','SUSPENCION_ORAL','100mg/5ml',7,15,'ANBEED_SRL', 11);

-- REGISTRO INVENTARIO
insert into INVENTARIO(ID_MEDICAMENTO,NOMBRE_COMERCIAL, NOMBRE_GENERICO,FORMA_FARMACEUTICA, CONCENTRACION_FARMACEUTICA, PRESENTACION_ENVASE, UNIDAD_MEDIDA, CANTIDAD, PRECIO_VENTA, PRECIO_COMPRA_CONTADO, PRECIO_COMPRA_CREDITO, LABORATORIO) VALUES
(1,'ACTRON','IBUPROFENO','COMPRIMIDO','400 MG','TABLETA','CAJA',5,1.5 ,38, 40,'IFARBO LTDA'),
(2,'OMEPRAZOL','OMEPRAZOL','INYECTABLE','40 MG', 'POLVO','CAJA',3, 25.5 , 85 , 90,'GLAND PHARMA LIMITED'),
(3,'ACETAMINOFEN','PARACETAMOL Y ACETAMINOFEN','COMPRIMIDO','500 MG','TABLETA','CAJA',5,0.80,65,70,'LABORATORIOS IFA S.A.'),
(4,'LERTUS','DICLOFENACO','COMPRIMIDO','75 MG','TABLETA','CAJA',15, 0.5, 100,120, 'GLAND PHARMA LIMITED'),
(5,'QUETORO@ 20','KETOROLACO','COMPRIMIDO','20 MG','TABLETA','CAJA', 1, 3, 76, 82,'Delta S.A.'),
(6,'PANTERA','PRESERVATIVO','LATEX','','SOBRE','CAJA', 8, 6, 90, 95,'LABORATORIOS I.S.O'),
(7,'AZITROMICINA','AZITROMICINA','TABLETA_ORAL','500Mg','BLISTER','CAJA_X_3',100,7,6,6.20,'ANBEED_SRL'),
(8,'LOZARTAN_POTASICO','LOSARTAN_POTASICO','TABLETAS_ORAL','50Mg','BLISTER','CAJA_X_100',150,30,30,35,'ANBEED_SRL'),
(9,'PROPOFOL','PROPOFOL','INYECTABLE','1%_2ml','CAJA','CAJA_X_1',5,50,42,45,'ANBEED_SRL'),
(10,'CEFOTAXIMA','CEFOTAXIMA','POLVO_INYECTABLE','1G','CAJA','CAJA_X_1',4,10,5,6,'ANBEED_SRL'),
(11,'IBUPROFENO','IBUPROFENO','SUSPENCION_ORAL','100mg/5ml','BOTELLA','CAJA_X_1',7,15,7,9,'ANBEED_SRL');

-- REGISTRO EMPLEADO
INSERT INTO REGISTRO_EMPLEADO(ID_PER, NOMBRE, APELLIDOS, HORARIO_ENTRADA, HORARIO_SALIDA, CARGO, UBICACION_EMPLEADO) values
(1,'DERECK DANNER HECTOR', 'FERNANDEZ MENDOZA', '08:00:00', '14:00:00', 'CAJERO - CONTROL DE INVENTARIO', 'MOSTRADOR - BODEGAS');

-- REGISTRO DE LA FACTURA
insert into FACTURA(fecha, nomre_comprador, nit_ci, id_medicamento, nombre_medicamento, cantidad, precio_unitario, importe, total_final, efectivo, cambio, importe_literal, id_per, nombre_cajero) values
('2022-12-11 10:12:00', 'SERGIO RAMOS',1239092, 2,'OMEPRAZOL', 3, 25.5, 126.5, 126.5, 130, 4.5,'CIENTO VEITISEIS CON CINCUENTA CENTAVOS', 1,'DERECK FERNANDEZ' ),
('2022-10-11 14:45:00', 'FREDDY MAMANI',9861848, 1,'ACTRON', 5, 1.5, 7.5, 7.5, 10, 2.5,'SIETE CON CINCUENTA CENTAVOS', 1,'DERECK FERNANDEZ' );

-- REGISTRO DE LA VENTA
INSERT INTO VENTAS(ID_FACTURA, ID_MEDICAMENTO, ID_PER, CANTIDAD) VALUES
(1,2,1,3),
(2,1,1,5);


-- CREACION DE CONSULTAS, VISTAS Y FUNCIONES PARA LA BASE DE DATOS CONSULTAS

-- CONSULTA VER TODA LA TABLA PERSONAL

SELECT PER.*
FROM PERSONAL AS PER;

-- CONSULTA VER LOS NOMBRE APELLIDOS Y CARGOS DE QUIENES TRABAJAN EN LA FARMACIA

SELECT PER.NOM_EMPL, PER.APE_EMPL, PER.CARGO
FROM PERSONAL AS PER;

-- CONSULTA VER EL NOMBRE COMERCIAL, CANTIDAD Y LABORATORIO DE LA TABLA INVENTARIO

SELECT INV.NOMBRE_COMERCIAL, INV.CANTIDAD, INV.LABORATORIO
FROM INVENTARIO AS INV
WHERE INV.FORMA_FARMACEUTICA='COMPRIMIDO';

-- CONSULTA VER EL NOMBRE GENERICO, CONCENTRACION, CANTIDAD, PRECIO DE VENTA Y EL LABORATORIO DESDE LA TABLA MEDICAMENTOS
-- CON UNA CANTIDAD MAYOR A 5 Y MENOR IGUAL A 100
SELECT MV.NOMBRE_GENERICO, MV.CONCENTRACION_FARMACEUTICA, MV.CANTIDAD, MV.PRECIO_VENTA, MV.LABORATORIO
FROM MEDICAMENTOS_VENTA AS MV
WHERE MV.CANTIDAD>5 AND MV.CANTIDAD<=100;

-- CONSULTA NOMBRE COMERCIAL, PRECIO DE VENTA, PRECIO COMPRA CONTADO Y A CREDITO

SELECT MV.NOMBRE_COMERCIAL, MV.PRECIO_VENTA, I.PRECIO_COMPRA_CONTADO, I.PRECIO_COMPRA_CREDITO
FROM MEDICAMENTOS_VENTA AS MV
INNER JOIN INVENTARIO I on MV.ID_MEDICAMENTO = I.ID_MEDICAMENTO;

-- CONSULTA NOMBRE COMERCIAL, PRESENTACION ENVASE, PRECIO DE VENTA, PRECIO COMPRA CONTADO Y A CREDITO
-- QUE TENGA UN PRECIO DE COMPRA AL CREDITO MAYOR IGUAL A 50BS

SELECT MV.NOMBRE_COMERCIAL, I.PRESENTACION_ENVASE, MV.PRECIO_VENTA,  I.PRECIO_COMPRA_CONTADO, I.PRECIO_COMPRA_CREDITO
FROM MEDICAMENTOS_VENTA AS MV
INNER JOIN INVENTARIO I on MV.ID_MEDICAMENTO = I.ID_MEDICAMENTO
WHERE I.PRECIO_COMPRA_CREDITO>=50;

-- VISTAS

-- CREAR UNA VISTA CON LA PRIMERA CONSULTA

CREATE VIEW CARGOS AS
    SELECT PER.NOM_EMPL, PER.APE_EMPL, PER.CARGO
    FROM PERSONAL AS PER;

SELECT CA.*
FROM CARGOS AS CA;

-- CREAR UNA VISTA QUE DE EL NOMBRE COMERCIAL, CONCENTRACION FARMACEUTICA Y EL PRECIO DE VENTA DE MEDICAMENTOS
-- CON PRECIO DE VENTA MAYOR A 10

CREATE VIEW MEDI AS
    SELECT MV.NOMBRE_COMERCIAL, MV.CONCENTRACION_FARMACEUTICA, MV.PRECIO_VENTA
    FROM MEDICAMENTOS_VENTA AS MV
    WHERE MV.PRECIO_VENTA>=10;

SELECT MV.*
FROM MEDI AS MV;

-- CREAR UNA VISTA QUE UNA A INVENTARIO CON MEDICAMENTOS Y MUESTRE EL ID ONVENTARIO, NOMBRE COMERCIAL, PRECIO DE VENTA
-- UNIDAD MEDIDA Y LABORTORIO DE MEDICAMENTOS CON UNA PRESENTACION IGUAL A TABLETA.

CREATE VIEW MEDIINVE AS
    SELECT I.ID_INVENTARIO, I.NOMBRE_COMERCIAL, MV.PRECIO_VENTA, I.UNIDAD_MEDIDA, MV.LABORATORIO
    FROM MEDICAMENTOS_VENTA AS MV
    INNER JOIN INVENTARIO I on MV.ID_MEDICAMENTO = I.ID_MEDICAMENTO
    WHERE I.PRESENTACION_ENVASE= 'TABLETA';

SELECT MEDI.*
FROM MEDIINVE AS MEDI;

-- CREAR UNA VISTA QUE MUESTRE EL NOMBRE DEL MEDICAMENTO A LA VENTA, LA CANTIDAD, PRECIO DE VENTA, LABORATORIO Y GENERE
-- UNA COLUMNA CON EL NOMBRE ESTANDAR CON LA CONDICION DE QUE:
-- SI PRECIO DE VENTA EN MAYOR DE 0 Y MENOR IGUAL A 1 DIGA "BARATO"
-- SI PRECIO DE VENTA ES MAYOR DE 1 Y MENOR IGUAL DE 10 DIGA "MEDIO"
-- SI PRECIO DE VENTA ES MAYOR A LOS 10 Y MENOR IGUAL A 100 DIGA "COSTOSO"

CREATE or replace VIEW ESTANDAR AS
    SELECT MV.NOMBRE_COMERCIAL,MV.CANTIDAD,MV.PRECIO_VENTA,MV.LABORATORIO,
        CASE
            WHEN MV.PRECIO_VENTA>0 AND MV.PRECIO_VENTA<=1 THEN 'BARATO'
            WHEN MV.PRECIO_VENTA>1 AND MV.PRECIO_VENTA<=10 THEN 'MEDIO'
            WHEN MV.PRECIO_VENTA>10 AND MV.PRECIO_VENTA<=100 THEN 'COSTOSO'
        END
    FROM MEDICAMENTOS_VENTA AS MV;

SELECT EST.*
FROM ESTANDAR AS EST;

-- VISTA 5

CREATE OR REPLACE VIEW MEDIINVE2 AS
    SELECT I.ID_INVENTARIO, I.NOMBRE_COMERCIAL, MV.PRECIO_VENTA, I.UNIDAD_MEDIDA, MV.LABORATORIO
    FROM MEDICAMENTOS_VENTA AS MV
    INNER JOIN INVENTARIO I on MV.ID_MEDICAMENTO = I.ID_MEDICAMENTO
    WHERE I.PRESENTACION_ENVASE= 'CAJA';

SELECT *
FROM MEDIINVE2 AS MEDI2;



-- FUNCIONES

-- CONTAR CUANTOS MEDICAMENTOS PERTECEN A LOS LABORATORIOS ANBEED SRL

SELECT COUNT (MV.NOMBRE_COMERCIAL) AS MEDICAMENTOS_LAB_ANBEED
FROM MEDICAMENTOS_VENTA AS MV
WHERE MV.LABORATORIO='ANBEED_SRL' OR MV.LABORATORIO='ANBEED SRL';


-- CREAR UNA FUCION APARTIR QUE MUESTRE EL MINIMO PRECIO DE COMPRA A CREDITO DE LOS MEDICAMENTOS QUE SEA PRESENTACION
-- EL PARAMETRO QUE DEBE ENTRAR
 CREATE OR REPLACE FUNCTION PRESENTACION (PRESENTACION VARCHAR(30))
 RETURNS INTEGER
    BEGIN
        DECLARE RESPUESTA INTEGER;
        SET RESPUESTA=(
                 SELECT MIN(I.PRECIO_COMPRA_CREDITO)V
                 FROM INVENTARIO AS I
                 WHERE I.PRESENTACION_ENVASE = PRESENTACION);
        RETURN RESPUESTA;
    END;

SELECT PRESENTACION('TABLETA');

-- FUNCION 3

 CREATE OR REPLACE FUNCTION PRECIO (DISTRIBUIDOR VARCHAR(100))
 RETURNS INTEGER
    BEGIN
        DECLARE RESPUESTA INTEGER;
        SET RESPUESTA=(
                 SELECT MIN(MV.PRECIO_VENTA)
                 FROM MEDICAMENTOS_VENTA AS MV
                 WHERE MV.LABORATORIO = DISTRIBUIDOR);
        RETURN RESPUESTA;
    END;

SELECT PRECIO('ANBEED_SRL');


-- TRIGGERS

-- Trigger 1

CREATE TABLE auditoria_inventario
(
    #columnas de auditoría
    Cantidad_anterior INT,
    Cantidad_posterior INT,
    Precio_anterior FLOAT,
    Precio_posterior FLOAT,
    operation varchar(30),
    userid varchar(30),
    hostname varchar(30)
);

CREATE OR REPLACE TRIGGER auditoria_inventario
    BEFORE UPDATE
    ON INVENTARIO
    FOR EACH ROW
BEGIN
    DECLARE cantidad_A text default '';
    DECLARE cantidad_B text default '';
    DECLARE Precio_A text default '';
    DECLARE Precio_B text default '';

    SET cantidad_A =NEW.CANTIDAD;
    SET cantidad_B =OLD.CANTIDAD;
    SET Precio_A =NEW.PRECIO_VENTA;
    SET Precio_B =OLD.PRECIO_VENTA;

    insert into auditoria_inventario(operation, userid, hostname, Cantidad_posterior, Precio_posterior, Cantidad_anterior, Precio_anterior)
    SELECT 'Update', user(), @@hostname, cantidad_A, Precio_A, cantidad_B, Precio_B;
END;

select * from inventario;

-- Trigger 2

CREATE TABLE auditoria_MedVen
(
    #columnas de auditoría
    Cantidad_anterior INT,
    Cantidad_posterior INT,
    Precio_anterior FLOAT,
    Precio_posterior FLOAT,
    operation varchar(30),
    userid varchar(30),
    hostname varchar(30)
);

CREATE OR REPLACE TRIGGER auditoria_MedVen
    BEFORE UPDATE
    ON MEDICAMENTOS_VENTA
    FOR EACH ROW
BEGIN
    DECLARE cantidad_A text default '';
    DECLARE cantidad_B text default '';
    DECLARE Precio_A text default '';
    DECLARE Precio_B text default '';

    SET cantidad_A =NEW.CANTIDAD;
    SET cantidad_B =OLD.CANTIDAD;
    SET Precio_A =NEW.PRECIO_VENTA;
    SET Precio_B =OLD.PRECIO_VENTA;

    insert into auditoria_inventario(operation, userid, hostname, Cantidad_posterior, Precio_posterior, Cantidad_anterior, Precio_anterior)
    SELECT 'Update', user(), @@hostname, cantidad_A, Precio_A, cantidad_B, Precio_B;
END;

select * from medicamentos_venta;

-- Trigger de validacion

alter table PERSONAL add column User varchar(50);
alter table PERSONAL add column Password varchar(50);

create trigger generate_Password before insert on

personal for each row
begin
    set
        new.User = CONCAT(SUBSTRING(new.NOM_EMPL,2,2),substring(new.APE_EMPL,2,2));
    set
        new.Password = CONCAT(substring(new.NOM_EMPL,2,2),substring(new.APE_EMPL,2,2),SUBSTRING(NEW.CI,2,2));
end;

INSERT INTO PERSONAL(ID_PER,NOM_EMPL,APE_EMPL,ci)
VALUES(2,'Juanito','Campos',7056003);

select * from personal